<?xml version="1.0"?>
<launch>
  <master auto="start"/>
  <arg name="model" />
  <arg name="set_base_frame" default="base_footprint"/>
  <arg name="set_odom_frame" default="odom"/>
  <arg name="set_map_frame"  default="map"/>
  <arg name="scan_topic"     default="scan"/>
  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>
  <arg name="open_rviz" default="true"/>
  <arg name="map_file" default="$(find turtlebot3_navigation)/maps/map.yaml"/>
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="odom" />
  <arg name="move_forward_only" default="false"/>
  <param name="/use_sim_time" value="true"/>
  <arg name="cmd_vel" default="/cmd_vel"/>
  <param name="cmd_vel_topic_name" value="$(arg cmd_vel)"/>
  <param  name="robot_description"
          textfile="$(find quad)/urdf/quad.urdf" />
  
 <node pkg="tf" type="static_transform_publisher" name="tf_dummy_base" args="0 0 0 0 0 0 quad dummy 100" />

 <node pkg="tf" type="static_transform_publisher" name="tf_base_guide" args="0 0 0 0 0 0 quad guide 100" />
 <node  name="tf_laser_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 quad hokuyo_link  100" />
  <node pkg="tf" type="static_transform_publisher" name="tf1_odom_base" args="0 0 0 0 0 0 odom quad  100" />
  <node pkg="tf" type="static_transform_publisher" name="tf1_base_map" args="0 0 0 0 0 0 quad map  100" />
<!-- <node pkg="turtlebot3_example" type="turtlebot3_obstacle" name="turtlebot3_obstacle" output="screen"> -->
 <!--  </node>-->


<!-- <node pkg="turtlebot3_example" type="turtlebot3_marker_server" name="turtlebot3_marker_server">-->
  <!--   <remap from="interactive_marker_velocity_smoother/raw_cmd_vel" to="cmd_vel"/>-->
 <!--  </node>-->
<node pkg="turtlebot3_example" type="turtlebot3_illumination" name="turtlebot3_illumination" output="screen">
  </node>

 <node pkg="turtlebot3_example" type="turtlebot3_sonar" name="turtlebot3_sonar" output="screen">
  </node>



<!-- send fake joint value-->
 
 <node
    name="joint_state_publisher_gui1"
    pkg="joint_state_publisher_gui"
    type="joint_state_publisher_gui" />
<!-- combine joint value-->
  <node
    name="robot_state_publisher1"
    pkg="robot_state_publisher"
    type="robot_state_publisher" />
<param name="publish_frequency" type="double" value="50.0" />
<!-- show in rviz-->
  <node
    name="rviz"
    pkg="rviz"
    type="rviz"
    args="-d $(find quad)/urdf.rviz" />

<!-- Gmapping -->
  <node pkg="gmapping" type="slam_gmapping" name="quad_slam_gmapping" output="screen">
    <param name="base_frame" value="$(arg set_base_frame)"/>
    <param name="odom_frame" value="$(arg set_odom_frame)"/>
    <param name="map_frame"  value="$(arg set_map_frame)"/>
    <rosparam command="load" file="$(find turtlebot3_slam)/config/gmapping_params.yaml" />
  </node>

<!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>


  <!-- AMCL -->
  <node pkg="amcl" type="amcl" name="amcl">

    <param name="min_particles"             value="500"/>
    <param name="max_particles"             value="3000"/>
    <param name="kld_err"                   value="0.02"/>
    <param name="update_min_d"              value="0.20"/>
    <param name="update_min_a"              value="0.20"/>
    <param name="resample_interval"         value="1"/>
    <param name="transform_tolerance"       value="0.5"/>
    <param name="recovery_alpha_slow"       value="0.00"/>
    <param name="recovery_alpha_fast"       value="0.00"/>
    <param name="initial_pose_x"            value="$(arg initial_pose_x)"/>
    <param name="initial_pose_y"            value="$(arg initial_pose_y)"/>
    <param name="initial_pose_a"            value="$(arg initial_pose_a)"/>
    <param name="gui_publish_rate"          value="50.0"/>

    <remap from="scan"                      to="$(arg scan_topic)"/>
    <param name="laser_max_range"           value="3.5"/>
    <param name="laser_max_beams"           value="180"/>
    <param name="laser_z_hit"               value="0.5"/>
    <param name="laser_z_short"             value="0.05"/>
    <param name="laser_z_max"               value="0.05"/>
    <param name="laser_z_rand"              value="0.5"/>
    <param name="laser_sigma_hit"           value="0.2"/>
    <param name="laser_lambda_short"        value="0.1"/>
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <param name="laser_model_type"          value="likelihood_field"/>

    <param name="odom_model_type"           value="diff"/>
    <param name="odom_alpha1"               value="0.1"/>
    <param name="odom_alpha2"               value="0.1"/>
    <param name="odom_alpha3"               value="0.1"/>
    <param name="odom_alpha4"               value="0.1"/>
    <param name="odom_frame_id"             value="odom"/>
    <param name="base_frame_id"             value="quad"/>

  </node>

 

  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params.yaml" command="load" />
    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />  
  </node>


<!-- rviz -->
 <!--  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz1" required="true"
          args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
  </group>
-->

 

</launch>
